plugins {
    id "java"
    id "scala"
    id "maven"
    id "maven-publish"
    id 'fabric-loom' version '0.6-SNAPSHOT'
    id "com.github.ben-manes.versions" version "0.21.0"
    id "com.github.johnrengelman.shadow" version "6.1.0"
    id "com.matthewprenger.cursegradle" version "1.4.0"
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
group = project.maven_group

version = mod_version
def ENV = System.getenv()
version = version + (ENV.GITHUB_ACTIONS ? "" : "+local")

repositories {
    maven {
        url = "http://maven.fabricmc.net/"
        name = "Fabric"
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    //These are the deps included with the scala adapter, if you think you have a good dep that would be a nice fit please open an issue.
    shadow "org.scala-lang:scala-library:${project.scala_version}"
    shadow "org.scala-lang:scala-reflect:${project.scala_version}"
    shadow "org.scala-lang:scala-compiler:${project.scala_version}"
	shadow "org.scala-lang.modules:scala-java8-compat_2.13:0.9.1"

    testCompile "org.scala-lang:scala-library:${project.scala_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

shadowJar {
	classifier = "fat"
    configurations = [project.configurations.shadow]
    exclude("META-INF")
}

build.dependsOn shadowJar

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier = "sources"
	from sourceSets.main.allSource
}


publishing {
    publications {
        maven(MavenPublication) {
            artifact(remapJar) {
                builtBy remapJar
            }
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
			pom.withXml {
				def depsNode = asNode().appendNode('dependencies')

				configurations.shadow.dependencies.stream()
					.each {
						def depNode = depsNode.appendNode('dependency')
						depNode.appendNode('groupId', it.group)
						depNode.appendNode('artifactId', it.name)
						depNode.appendNode('version', it.version)
						depNode.appendNode('scope', 'compile')
					}
			}
        }
    }
    repositories {
		repositories {
			if (ENV.MAVEN_URL) {
				maven {
					url ENV.MAVEN_URL
					credentials {
						username ENV.MAVEN_USERNAME
						password ENV.MAVEN_PASSWORD
					}
				}
			}
		}
    }
}

curseforge {
	if (ENV.CURSEFORGE_API_KEY) {
		apiKey = ENV.CURSEFORGE_API_KEY
	}

    project {
        id = '309275'
        changelog = 'A changelog can be found at https://github.com/FabricMC/fabric-language-scala/commits/master'
        releaseType = 'release'
        addGameVersion '1.16.5'
		addGameVersion '1.15.2'
		addGameVersion '1.14.4'

        mainArtifact(shadowJar) {
            displayName = "Fabric Language Scala $version"
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

// A task to ensure that the version being released has not already been released.
task checkVersion {
	doFirst {
		def xml = new URL("https://maven.fabricmc.net/net/fabricmc/fabric-language-scala/maven-metadata.xml").text
		def metadata = new XmlSlurper().parseText(xml)
		def versions = metadata.versioning.versions.version*.text();
		if (versions.contains(version)) {
			throw new RuntimeException("${version} has already been released!")
		}
	}
}

publish.mustRunAfter checkVersion
project.tasks.curseforge.mustRunAfter checkVersion